apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  annotations:
    meta.helm.sh/release-name: gvp-rs
    meta.helm.sh/release-namespace: gvp
  name: gvp-rs
  namespace: gvp
spec:
  groups:
    - name: gvp-rs
      rules:
        - alert: PodStatusFailed
          annotations:
            description: The trigger will flag an alarm when RS pod goes to Failed state
            summary: RS pod gvp-rs is in Failed state
          expr: 'kube_pod_status_phase{pod=~"gvp-rs.*",phase="Failed"} == 1'
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: PodStatusUnknown
          annotations:
            description: >-
              The trigger will flag an alarm when RS pod goes to Unknown state
              and does not recover within 5m
            summary: RS pod gvp-rs is in Unknown state
          expr: 'kube_pod_status_phase{pod=~"gvp-rs.*",phase="Unknown"} == 1'
          for: 5m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: PodStatusPending
          annotations:
            description: >-
              The trigger will flag an alarm when RS pod stays in Pending state
              for 5m
            summary: RS pod gvp-rs has been in Pending state
          expr: 'kube_pod_status_phase{pod=~"gvp-rs.*",phase="Pending"} == 1'
          for: 5m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: PodStatusNotReady
          annotations:
            description: >-
              The trigger will flag an alarm when RS pod status is Not ready for
              60m
            summary: RS pod gvp-rs status has been in Not ready state for 60m
          expr: 'kube_pod_status_ready{pod=~"gvp-rs.*",condition="true"} != 1'
          for: 60m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: CRITICAL
        - alert: ContainerExited
          annotations:
            description: >-
              The trigger will flag an alarm when the RS or RS SNMP container
              gets exited
            summary: Container exited in the RS pod gvp-rs
          expr: 'kube_pod_container_status_running{pod=~"gvp-rs.*"} != 1'
          labels:
            service: gvp
            servicename: gvp-rs
            severity: LOW
        - alert: ContainerRestartedRepeatedly
          annotations:
            description: >-
              The trigger will flag an alarm when the RS or RS SNMP container
              gets restarted 7 or more times within 30 mins
            summary: Repeated container restart seen in the RS pod gvp-rs
          expr: >-
            increase(kube_pod_container_status_restarts_total{pod=~"gvp-rs.*"}[30m])
            >= 7
          labels:
            service: gvp
            servicename: gvp-rs
            severity: CRITICAL
        - alert: InitContainerFailed
          annotations:
            description: >-
              The trigger will flag an alarm when the RS init container gets
              failed
            summary: Init container failed in the RS pod gvp-rs
          expr: >-
            kube_pod_init_container_status_terminated_reason{pod=~"gvp-rs.*",reason!="Completed"}
            == 1
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: InitContainerFailingRepeatedly
          annotations:
            description: >-
              The trigger will flag an alarm when the RS init container gets
              failed 7 or more times within 30 mins
            summary: Init container failing repeatedly in the RS pod gvp-rs
          expr: >-
            increase(kube_pod_init_container_status_restarts_total{pod=~"gvp-rs.*"}[30m])
            >= 7
          labels:
            service: gvp
            servicename: gvp-rs
            severity: CRITICAL
        - alert: ContainerCPUreached60percent
          annotations:
            description: >-
              The trigger will flag an alarm when the RS container CPU
              utilization goes beyond 60% for 30m
            summary: RS container CPU utilization more than 60% in the RS pod gvp-rs
          expr: >-
            ((sum(rate(container_cpu_usage_seconds_total{container="gvp-rs",pod=~"gvp-rs.*"}[5m]))
            by
            (container))/(sum(container_spec_cpu_quota{container="gvp-rs",pod=~"gvp-rs.*"}/container_spec_cpu_period{container="gvp-rs",pod=~"gvp-rs.*"})
            by (container))) * 100 > 60 and
            ((sum(rate(container_cpu_usage_seconds_total{container="gvp-rs",pod=~"gvp-rs.*"}[5m]))
            by
            (container))/(sum(container_spec_cpu_quota{container="gvp-rs",pod=~"gvp-rs.*"}/container_spec_cpu_period{container="gvp-rs",pod=~"gvp-rs.*"})
            by (container))) * 100 <= 80
          for: 30m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: ContainerMemoryUsage60percent
          annotations:
            description: >-
              The trigger will flag an alarm when the RS container Memory
              utilization goes beyond 60% for 30m
            summary: RS container Memory utilization more than 60% in the RS pod gvp-rs
          expr: >-
            (sum(container_memory_usage_bytes{pod=~"gvp-rs.*",container="gvp-rs"})
            by
            (container)/sum(kube_pod_container_resource_limits_memory_bytes{pod=~"gvp-rs.*",container="gvp-rs"})
            by (container)) * 100 > 60 and
            (sum(container_memory_usage_bytes{pod=~"gvp-rs.*",container="gvp-rs"})
            by
            (container)/sum(kube_pod_container_resource_limits_memory_bytes{pod=~"gvp-rs.*",container="gvp-rs"})
            by (container)) * 100 <= 80
          for: 30m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: LastJMSMessageProcessingTimeDelay
          annotations:
            description: >-
              The RS mib counter stats will be collected for every 30 seconds
              and if the mib counter rsJmsMessageLast is greater than 1800000
              for any one of the four storage classes then the trigger will flag
              an alarm
            summary: Delay in processing the last JMS message for pod gvp-rs
          expr: 'count(rsJmsMessageLast{pod=~"gvp-rs.*"} > 1800000) >= 1'
          labels:
            service: gvp
            servicename: gvp-rs
            severity: LOW
        - alert: RSQueueSizeHigh
          annotations:
            description: >-
              The trigger will flag an alarm when RS JMS message queue size goes
              beyond 5000(1GB approx backlog) for 15m
            summary: RS pod gvp-rs queue size increased to 5000(1GB approx backlog)
          expr: 'sum(rsQueueSize{pod=~"gvp-rs.*"}) by (pod) >= 5000'
          for: 15m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: MEDIUM
        - alert: RSQueueSizeCritical
          annotations:
            description: >-
              The trigger will flag an alarm when RS JMS message queue size goes
              beyond 25000(5GB approx backlog) for 60m
            summary: RS pod gvp-rs queue size increased to 25000(5GB approx backlog)
          expr: 'sum(rsQueueSize{pod=~"gvp-rs.*"}) by (pod) >= 25000'
          for: 60m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: HIGH
        - alert: RSSQLDatabaseDTUConsumptionPercent
          annotations:
            description: >-
              RS SQL Database instance is experiencing high DTU consumption
              percentage > (80%) for 30m
            summary: >-
              RS SQL Database instance has high DTU consumption percentage >
              (80%) for 30m
          expr: >-
            azure_SqlDatabase_dtu_consumption_percent{server=~"mssql00-gvp.*",database="gvp-rs"}
            >= 80
          for: 30m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: HIGH
        - alert: RSSQLDatabaseStoragePercentage
          annotations:
            description: >-
              Azure SQL Database instance is experiencing high storage
              percentage > (80%) for 10m.
            summary: >-
              RS SQL Database instance has high storage percentage > (80%) for
              10m.
          expr: >-
            azure_SqlDatabase_storage_percent{server=~"mssql00-gvp.*",database="gvp-rs"}
            > 80
          for: 10m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: HIGH
        - alert: PVC50PercentFilled
          annotations:
            description: >-
              This trigger will flag an alarm when the RS PVC size is 50% filled
              for 30m
            summary: RS PVC size is 50% filled for 30m
          expr: >-
            (kubelet_volume_stats_used_bytes{namespace="gvp",
            persistentvolumeclaim="gvp-rs"} *
            100)/kubelet_volume_stats_capacity_bytes{namespace="gvp",
            persistentvolumeclaim="gvp-rs"} > 50
          for: 30m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: HIGH
        - alert: PVC80PercentFilled
          annotations:
            description: >-
              This trigger will flag an alarm when the RS PVC size is 80% filled
              for 10m
            summary: RS PVC size is 80% filled for 10m
          expr: >-
            (kubelet_volume_stats_used_bytes{namespace="gvp",
            persistentvolumeclaim="gvp-rs"} *
            100)/kubelet_volume_stats_capacity_bytes{namespace="gvp",
            persistentvolumeclaim="gvp-rs"} > 80
          for: 10m
          labels:
            service: gvp
            servicename: gvp-rs
            severity: CRITICAL